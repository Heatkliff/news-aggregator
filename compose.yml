services:
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - CELERY_BROKER_URL=redis://redis:${REDIS_PORT}/0
      - CELERY_RESULT_BACKEND=redis://redis:${REDIS_PORT}/0
    depends_on:
      - db
      - redis
    restart: unless-stopped

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT}:6379"
    restart: unless-stopped
    volumes:
      - redis_data:/data

  celery:
    build: .
    command: celery -A news_aggregator worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - CELERY_BROKER_URL=redis://redis:${REDIS_PORT}/0
      - CELERY_RESULT_BACKEND=redis://redis:${REDIS_PORT}/0
    depends_on:
      - web
      - db
      - redis
    restart: unless-stopped

  celery-beat:
    build: .
    command: celery -A news_aggregator beat --loglevel=info
    volumes:
      - .:/app
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - CELERY_BROKER_URL=redis://redis:${REDIS_PORT}/0
      - CELERY_RESULT_BACKEND=redis://redis:${REDIS_PORT}/0
    depends_on:
      - web
      - db
      - redis
      - celery
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: